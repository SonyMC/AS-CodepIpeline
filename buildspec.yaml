version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
    - echo Logging in to Amazon ECR...
    - aws --version
#   Login to either ECR repository or Docker Repository
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 172172108913.dkr.ecr.us-east-1.amazonaws.com
#    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
#    - aws $(ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
#    - aws $(ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
#    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 012345678910.dkr.ecr.us-west-2.amazonaws.com   
    - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
    - IMAGE_URI=${REPOSITORY_URI}:${TAG}  # tag is taken from the github comit tag
#    - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
    - echo Build started on `date`
    - echo $IMAGE_URI
    # Build package by skipping the DockerFile
    - mvn clean package -Ddockerfile.skip  
    - docker build --tag $IMAGE_URI .
  post_build:
    commands:
    - printenv
    - echo Build completed on `date`
    - echo $(docker images)
    - echo Pushing docker image
    - docker push $IMAGE_URI
#    - docker push $REPOSITORY_URI:$TAG
    - echo push completed
    - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $IMAGE_URI > imagedefinitions.json
artifacts:
  files:
  - imagedefinitions.json
